<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr yang</title>
  <subtitle>Mr yang</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-18T12:31:38.075Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新建hexo个博客</title>
    <link href="http://yoursite.com/2017/02/18/markuphexo/"/>
    <id>http://yoursite.com/2017/02/18/markuphexo/</id>
    <published>2017-02-18T12:30:18.401Z</published>
    <updated>2017-02-18T12:31:38.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何搭建自己的hexo博客"><a href="#如何搭建自己的hexo博客" class="headerlink" title="如何搭建自己的hexo博客"></a>如何搭建自己的hexo博客</h2><p>分为两步：1.现在本地生成 2.上传到github服务器 生成静态博客</p>
<ol>
<li>首先得安装好npm<a id="more"></a></li>
<li><p>用npm安装hexo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure>
</li>
<li><p>选择你要新建博客的文件夹 初始化hexo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init .   //.代表全部</div></pre></td></tr></table></figure>
</li>
<li><p>去网上下载主题，也可以使用自带的<br>怎么下载主题？<br><a href="https://hexo.io/" target="_blank" rel="external">hexo官网</a></p>
<ul>
<li>挑选好看的主题</li>
</ul>
<ul>
<li>点击blog进入博主的github主页 找项目它的项目文件</li>
</ul>
<ul>
<li>clone到本地进行配置文件</li>
</ul>
</li>
<li><p>文件配置<br>根据博主的readme进行配置，每个可能都不一样</p>
<ul>
<li>主文件夹是自己的.yml  里面有各种设置</li>
<li>source资源文件夹中有样式和需要上传的markdown文件</li>
</ul>
</li>
<li><p>hexo使用主题的原理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>hexo执行代码hexo server –&gt;利用你blog中的souce资源 和 theme中的样式资源 根据配置单的要求<br>生成相应的html代码在public中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="github如何搭建博客"><a href="#github如何搭建博客" class="headerlink" title="github如何搭建博客"></a>github如何搭建博客</h3><ol>
<li><p>首先新建一个仓库 为了能方便的调用blog这个仓库有一个默认的名字<br>用户名.github.io</p>
</li>
<li><p>将生成的静态页面上传到这个仓库中就可以使用<br>用户名.github.io 进行访问</p>
</li>
<li><p>markdown的小技巧 预览代码<br>在markdown中插入 &lt;iframe&gt;标签<br>在利用htmlpreview.github.io中的方法可以 在markdown中预览</p>
</li>
<li>githup htmlpreview预览<br>为了使能调用js 需要在项目中开启分支<ul>
<li>setting</li>
<li>options</li>
<li>source</li>
<li>开启一个分支 save</li>
<li>你将得到一个url <a href="https://用户名.githup.io/仓库名/这里写你要预览的文件" target="_blank" rel="external">https://用户名.githup.io/仓库名/这里写你要预览的文件</a></li>
<li>挑转到预览页面</li>
</ul>
</li>
</ol>
<h5 id="跳转链接"><a href="#跳转链接" class="headerlink" title="跳转链接"></a>跳转链接</h5><p>  <a href="http://htmlpreview.github.io/" target="_blank" rel="external">htmlpreview</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何搭建自己的hexo博客&quot;&gt;&lt;a href=&quot;#如何搭建自己的hexo博客&quot; class=&quot;headerlink&quot; title=&quot;如何搭建自己的hexo博客&quot;&gt;&lt;/a&gt;如何搭建自己的hexo博客&lt;/h2&gt;&lt;p&gt;分为两步：1.现在本地生成 2.上传到github服务器 生成静态博客&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先得安装好npm
    
    </summary>
    
      <category term="插件" scheme="http://yoursite.com/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="杂文" scheme="http://yoursite.com/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>canvas绘制星空z轴</title>
    <link href="http://yoursite.com/2017/02/18/start/"/>
    <id>http://yoursite.com/2017/02/18/start/</id>
    <published>2017-02-18T11:22:00.623Z</published>
    <updated>2017-02-18T11:25:22.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="星空demo"><a href="#星空demo" class="headerlink" title="星空demo"></a>星空demo</h1><ul>
<li>主要用到了canvas</li>
<li>x,y,z轴</li>
</ul>
<iframe width="100%" scrolling="no" height="400px" frameborder="0" src="https://461255824.github.io/demo/canvasstar.html"></iframe>

<h3 id="详细代码"><a href="#详细代码" class="headerlink" title="详细代码"></a>详细代码</h3><p>请转到我的主页<a href="https://github.com/461255824/demo/blob/master/canvasweiba.html" target="_blank" rel="external">guihub</a><br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;星空demo&quot;&gt;&lt;a href=&quot;#星空demo&quot; class=&quot;headerlink&quot; title=&quot;星空demo&quot;&gt;&lt;/a&gt;星空demo&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;主要用到了canvas&lt;/li&gt;
&lt;li&gt;x,y,z轴&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&quot;100%&quot; scrolling=&quot;no&quot; height=&quot;400px&quot; frameborder= &quot;0&quot; src=&quot;https://461255824.github.io/demo/canvasstar.html&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;详细代码&quot;&gt;&lt;a href=&quot;#详细代码&quot; class=&quot;headerlink&quot; title=&quot;详细代码&quot;&gt;&lt;/a&gt;详细代码&lt;/h3&gt;&lt;p&gt;请转到我的主页&lt;a href=&quot;https://github.com/461255824/demo/blob/master/canvasweiba.html&quot;&gt;guihub&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="demo" scheme="http://yoursite.com/categories/demo/"/>
    
    
      <category term="canvas" scheme="http://yoursite.com/tags/canvas/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>gulp操作</title>
    <link href="http://yoursite.com/2017/02/18/gulp%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/02/18/gulp操作/</id>
    <published>2017-02-18T06:54:39.349Z</published>
    <updated>2017-02-18T09:03:54.884Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gulp操作"><a href="#gulp操作" class="headerlink" title="gulp操作"></a>gulp操作</h2><h3 id="gulp是用来压缩合并代码的"><a href="#gulp是用来压缩合并代码的" class="headerlink" title="gulp是用来压缩合并代码的"></a>gulp是用来压缩合并代码的</h3><p>1.npm 全局安装gulp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp-cli -g</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>2.找到要压缩代码的文件夹</p>
<p>（1）首先初始化npm工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init -y</div></pre></td></tr></table></figure></p>
<p>会生成一个package.json的安装文件<br>（2）安装gulp文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp --save--dev</div></pre></td></tr></table></figure></p>
<p>–save<br>表示要将文件存到dependencies 项目使用依赖的插件<br>–save–dev<br>表示要将文件存到devDependencies 开发时依赖的插件</p>
<h3 id="文件使用gulp压缩时需要的其他插件"><a href="#文件使用gulp压缩时需要的其他插件" class="headerlink" title="文件使用gulp压缩时需要的其他插件"></a>文件使用gulp压缩时需要的其他插件</h3><p>1.html压缩<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp-htmlmin --save--dev</div></pre></td></tr></table></figure></p>
<p>2.css压缩<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp-cssnano --save--dev</div></pre></td></tr></table></figure></p>
<p>3.js压缩<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp-uglify --save--dev</div></pre></td></tr></table></figure></p>
<p>4.文件合并<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp-concat --save--dev</div></pre></td></tr></table></figure></p>
<p>###gulp执行需要的js代码<br>1.新建gulpfile.js 代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//js引入gulp对象</div><div class="line">var gulp = require(&quot;gulp&quot;);</div><div class="line">*注：引入的对象要加引号；</div><div class="line">//引入其他需要的插件对象</div><div class="line">var htmlmin = require(&quot;gulp-htmlmin&quot;);</div><div class="line">var cssnano = require(&quot;gulp-cssnano&quot;);</div><div class="line">var uglify = require(&quot;gulp-uglify&quot;);</div><div class="line">var concat = require(&quot;gulp-concat&quot;);</div><div class="line">var rename = rqurie(&quot;gulp-rename&quot;);//rename是一个插件</div></pre></td></tr></table></figure></p>
<p>2.执行任务代码</p>
<ul>
<li>gulp通过执行任务进行操作 任务顺序：gulp.task –&gt; gulp.src–&gt; gulp.dest –&gt;gulp.watch<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//新建一个task任务压缩js代码</div><div class="line">gulp.task(&quot;任务名&quot;,function()&#123;</div><div class="line">    gulp.src([&quot;需要压缩的文件相对路径&quot;])//如果是多个使用数组</div><div class="line">    .pipe(uglify())//gulp是通过管道pipe进行流通的</div><div class="line">    .pipe(rename(&apos;新的名字&apos;))//重命名一般是    名字.min.js</div><div class="line">    .pipe(gulp.dest(&quot;压缩后文件要存的位置&quot;))</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
</ul>
<p>3.合并两及多个文件concat();<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">gulp.task(&quot;合并任务&quot;,function()&#123;</div><div class="line">    gulp.src([&apos;文件路径文件1&apos;,&apos;文件2&apos;])</div><div class="line">    .pipe(concat(&apos;生成的文件路径及名称&apos;))</div><div class="line">    .pipe(gulp.dest(&quot;压缩后文件要存的位置&quot;))</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>4.压缩html文件<br>html文件中肯能含有css和js所以是应该是判读最多的 需要传入参数对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">gulp.task(&apos;htmlmin&apos;, function () &#123;</div><div class="line">//如果需要去除多个参数 可以先声明变量 便于整洁</div><div class="line">    var options = &#123;</div><div class="line">        removeComments: true,//清除HTML注释</div><div class="line">        collapseWhitespace: true,//压缩HTML</div><div class="line">        collapseBooleanAttributes: true,//省略布尔属性的值 &lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</div><div class="line">        removeEmptyAttributes: true,//删除所有空格作属性值 &lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</div><div class="line">        removeScriptTypeAttributes: true,//删除&lt;script&gt;的type=&quot;text/javascript&quot;</div><div class="line">        removeStyleLinkTypeAttributes: true,//删除&lt;style&gt;和&lt;link&gt;的type=&quot;text/css&quot;</div><div class="line">        minifyJS: true,//压缩页面JS</div><div class="line">        minifyCSS: true//压缩页面CSS</div><div class="line">    &#125;;</div><div class="line">    gulp.src(&apos;src/html/*.html&apos;)   //找到文件下所有以.html结尾的文件</div><div class="line">        .pipe(htmlmin(options))</div><div class="line">        .pipe(gulp.dest(&apos;dist/html&apos;));  //默认压缩后的文件都放到dist文件下</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>5.wactch任务可以配合browser-sync一起使用</p>
<ul>
<li>就是当监视下文件发生改变的时候 browser也进行显示已保证压缩的文件没有问题<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//全局安装borowsync</div><div class="line">npm install browser-sync -g</div><div class="line"></div><div class="line">//启动browser服务</div><div class="line">browsync start --server --files &quot;文件相对路径&quot;;</div><div class="line">注：browsync启动的当前目录一定要含有index.html文件 要不然启动不了</div></pre></td></tr></table></figure>
</li>
</ul>
<p>browser-sync和wacth没有必然的练习<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">gulp.task(&quot;mywacht&quot;,function()&#123;</div><div class="line">    gulp.watch([&apos;文件名1&apos;,&apos;文件名2&apos;],[&apos;任务名1&apos;,&apos;任务名2&apos;]);</div><div class="line">&#125;)</div><div class="line">//当文件名1或者2的内容改变的时候执行任务1,2；</div></pre></td></tr></table></figure></p>
<p>6.利用gulp合并图片成雪碧图<br>原理：是将css文件中用到的图片合并成一张，并改变css文件中图片的引入路径<br>(1)安装插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp-spriter --save--dev</div></pre></td></tr></table></figure></p>
<p>(2)js代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//引入对象</div><div class="line">var spriter = gulp.require(&quot;gulp-spriter&quot;);</div><div class="line">//新建任务代码</div><div class="line">gulp.task(&quot;spriter&quot;,function()&#123;</div><div class="line">    gulp.src(&quot;文件名.css&quot;)</div><div class="line">    .pipe(spriter(&#123;</div><div class="line">        spriter:&apos;合并后的图片名.png&apos;,</div><div class="line">        slice:&apos;./原来的图片所在的文件夹&apos;,</div><div class="line">        outpath:&apos;合并后图片保存的文件夹&apos;</div><div class="line">    &#125;))</div><div class="line">    .pipe(gulp.dest(&quot;css文件保存的路径&quot;))</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul>
<li><p>API:<br>task (创建任务)<br>src (选择路径)<br>dest (输出路径)<br>watch (监视文件及执行任务)<br>rename (重命名文件)<br>require (引入插件对象)<br>pipe (管道)</p>
</li>
<li><p>插件：</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>常用插件</th>
<th style="text-align:right">不常用插件</th>
</tr>
</thead>
<tbody>
<tr>
<td>uglify (压缩js)</td>
<td style="text-align:right">imgmin</td>
</tr>
<tr>
<td>concat (合并文件)</td>
<td style="text-align:right">jshint</td>
</tr>
<tr>
<td>cssnano (压缩css)</td>
<td style="text-align:right">eslint</td>
</tr>
<tr>
<td>htmlmin (压缩html)</td>
<td style="text-align:right">sourcemap</td>
</tr>
<tr>
<td>spriter (合并雪碧图)</td>
<td style="text-align:right">gulp-less</td>
</tr>
<tr>
<td>gulp-rename(重命名)</td>
<td style="text-align:right">gulp-if</td>
</tr>
<tr>
<td></td>
<td style="text-align:right">gulp-jsonminify</td>
</tr>
<tr>
<td></td>
<td style="text-align:right">gulp-load-plugins</td>
</tr>
<tr>
<td></td>
<td style="text-align:right">gulp-eslint</td>
</tr>
</tbody>
</table>
<p>注：跳转<a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">gulp中文官网</a>;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;gulp操作&quot;&gt;&lt;a href=&quot;#gulp操作&quot; class=&quot;headerlink&quot; title=&quot;gulp操作&quot;&gt;&lt;/a&gt;gulp操作&lt;/h2&gt;&lt;h3 id=&quot;gulp是用来压缩合并代码的&quot;&gt;&lt;a href=&quot;#gulp是用来压缩合并代码的&quot; class=&quot;headerlink&quot; title=&quot;gulp是用来压缩合并代码的&quot;&gt;&lt;/a&gt;gulp是用来压缩合并代码的&lt;/h3&gt;&lt;p&gt;1.npm 全局安装gulp&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install gulp-cli -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="插件使用" scheme="http://yoursite.com/categories/%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>引言</title>
    <link href="http://yoursite.com/2017/02/18/ReadMe/"/>
    <id>http://yoursite.com/2017/02/18/ReadMe/</id>
    <published>2017-02-18T04:46:25.000Z</published>
    <updated>2017-02-18T08:58:57.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>路漫漫其修远兮，吾将上下而求索<br>这里的笔记用于记录学习中的心得<br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;路漫漫其修远兮，吾将上下而求索&lt;br&gt;这里的笔记用于记录学习中的心得&lt;br&gt;
    
    </summary>
    
      <category term="引言：" scheme="http://yoursite.com/categories/%E5%BC%95%E8%A8%80%EF%BC%9A/"/>
    
    
      <category term="引言" scheme="http://yoursite.com/tags/%E5%BC%95%E8%A8%80/"/>
    
  </entry>
  
</feed>
